apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthcare-api
  namespace: healthcare
  labels:
    app: healthcare-api
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: healthcare-api
      component: api
  template:
    metadata:
      labels:
        app: healthcare-api
        component: api
    spec:
      containers:
      - name: api
        image: healthcare-platform/api:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: redis-url
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: jwt-secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: aws-access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: aws-secret-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: openai-api-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: data-storage
          mountPath: /app/data
        - name: model-storage
          mountPath: /app/models
      volumes:
      - name: data-storage
        persistentVolumeClaim:
          claimName: healthcare-data-pvc
      - name: model-storage
        persistentVolumeClaim:
          claimName: healthcare-models-pvc
      serviceAccountName: healthcare-api-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - healthcare-api
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: healthcare-api
  namespace: healthcare
  labels:
    app: healthcare-api
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: healthcare-api
    component: api

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: healthcare-api-ingress
  namespace: healthcare
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.healthcare-platform.com
    secretName: healthcare-api-tls
  rules:
  - host: api.healthcare-platform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: healthcare-api
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: healthcare-api-hpa
  namespace: healthcare
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: healthcare-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: healthcare-api-pdb
  namespace: healthcare
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: healthcare-api
      component: api
